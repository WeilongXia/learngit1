/******************创建版本库并初始化******************************/
mkdir learngit 
cd learngit 
git init

/******************添加文件，修改并提交****************************/
git add 添加的文件名 （每次修改文件之后都要重新add一下）
git commit -m "修改文件的内容等相关说明"

git status（此命令可以用来查看仓库当前的状态）
git diff 要查看的文件名 （用来查看对文件进行的修改）

/*******************版本回退**************************************/
git log （查看提交的日志记录）
git log --pretty=oneline （可以减少输出信息，看起来更加清楚）
git reset --hard HEAD^（回退到上一个版本）
git reset --hard 版本号 （回退到指定版本）
git reflog （查看命令历史）

/********************工作区和暂存区********************************/
git add实际上是把文件修改添加到暂存区stage
git commit实际上是把暂存区的所有内容提交到当前分支，主分支为master

/*********************管理修改*************************************/
git diff HEAD -- 要查看的文件名（查看工作区和版本库里面最新版本的区别）
每次修改，如果不用git add到暂存区，那就不会加入到commit中

/*********************撤销修改**************************************/
场景1：改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout --file
场景2：不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1， 第二步按场景1操作
场景3：已经提交了不适合的修改到版本库时，想要撤销本次提交，参考版本回退，不过前提是没有推送到远程库

/*********************删除文件**************************************/
git rm file  &&   git commit -m "说明"
如果错删了文件管理器里的文件，但是版本库的文件还在，git checkout -- file就可以直接用版本库的版本替换工作区的版本

/**********************远程仓库***************************************/
git remote add origin git@github.com:WeilongXia/learngit1.git （origin是远程库的名字，当然也可以改成别的，这一步是将本地库和远程库进行关联）
git push -u origin master （把当前分支master推送到远程库origin，远程库是空的，第一次推送master分支时，加上了-u参数，Git不仅会把本地的master分支内容推送到远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令）


